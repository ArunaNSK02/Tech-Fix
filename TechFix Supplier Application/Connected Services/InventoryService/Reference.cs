//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechFix_Supplier_Application.InventoryService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Inventory", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class Inventory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int InventoryIDField;
        
        private int ProductIDField;
        
        private int SupplierIDField;
        
        private decimal PriceField;
        
        private System.DateTime StockInsertDateField;
        
        private int StockQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int InventoryID {
            get {
                return this.InventoryIDField;
            }
            set {
                if ((this.InventoryIDField.Equals(value) != true)) {
                    this.InventoryIDField = value;
                    this.RaisePropertyChanged("InventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public System.DateTime StockInsertDate {
            get {
                return this.StockInsertDateField;
            }
            set {
                if ((this.StockInsertDateField.Equals(value) != true)) {
                    this.StockInsertDateField = value;
                    this.RaisePropertyChanged("StockInsertDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int StockQuantity {
            get {
                return this.StockQuantityField;
            }
            set {
                if ((this.StockQuantityField.Equals(value) != true)) {
                    this.StockQuantityField = value;
                    this.RaisePropertyChanged("StockQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InventoryService.InventoryServiceSoap")]
    public interface InventoryServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        bool AddStock(int productId, int supplierId, decimal price, int stockQuantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddStock", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddStockAsync(int productId, int supplierId, decimal price, int stockQuantity);
        
        // CODEGEN: Generating message contract since element name GetAllInventoriesResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllInventories", ReplyAction="*")]
        TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse GetAllInventories(TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllInventories", ReplyAction="*")]
        System.Threading.Tasks.Task<TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse> GetAllInventoriesAsync(TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllInventoriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllInventories", Namespace="http://tempuri.org/", Order=0)]
        public TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequestBody Body;
        
        public GetAllInventoriesRequest() {
        }
        
        public GetAllInventoriesRequest(TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAllInventoriesRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public int supplierID;
        
        public GetAllInventoriesRequestBody() {
        }
        
        public GetAllInventoriesRequestBody(int supplierID) {
            this.supplierID = supplierID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetAllInventoriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetAllInventoriesResponse", Namespace="http://tempuri.org/", Order=0)]
        public TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponseBody Body;
        
        public GetAllInventoriesResponse() {
        }
        
        public GetAllInventoriesResponse(TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetAllInventoriesResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public TechFix_Supplier_Application.InventoryService.Inventory[] GetAllInventoriesResult;
        
        public GetAllInventoriesResponseBody() {
        }
        
        public GetAllInventoriesResponseBody(TechFix_Supplier_Application.InventoryService.Inventory[] GetAllInventoriesResult) {
            this.GetAllInventoriesResult = GetAllInventoriesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InventoryServiceSoapChannel : TechFix_Supplier_Application.InventoryService.InventoryServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InventoryServiceSoapClient : System.ServiceModel.ClientBase<TechFix_Supplier_Application.InventoryService.InventoryServiceSoap>, TechFix_Supplier_Application.InventoryService.InventoryServiceSoap {
        
        public InventoryServiceSoapClient() {
        }
        
        public InventoryServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InventoryServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InventoryServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddStock(int productId, int supplierId, decimal price, int stockQuantity) {
            return base.Channel.AddStock(productId, supplierId, price, stockQuantity);
        }
        
        public System.Threading.Tasks.Task<bool> AddStockAsync(int productId, int supplierId, decimal price, int stockQuantity) {
            return base.Channel.AddStockAsync(productId, supplierId, price, stockQuantity);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse TechFix_Supplier_Application.InventoryService.InventoryServiceSoap.GetAllInventories(TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest request) {
            return base.Channel.GetAllInventories(request);
        }
        
        public TechFix_Supplier_Application.InventoryService.Inventory[] GetAllInventories(int supplierID) {
            TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest inValue = new TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest();
            inValue.Body = new TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequestBody();
            inValue.Body.supplierID = supplierID;
            TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse retVal = ((TechFix_Supplier_Application.InventoryService.InventoryServiceSoap)(this)).GetAllInventories(inValue);
            return retVal.Body.GetAllInventoriesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse> TechFix_Supplier_Application.InventoryService.InventoryServiceSoap.GetAllInventoriesAsync(TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest request) {
            return base.Channel.GetAllInventoriesAsync(request);
        }
        
        public System.Threading.Tasks.Task<TechFix_Supplier_Application.InventoryService.GetAllInventoriesResponse> GetAllInventoriesAsync(int supplierID) {
            TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest inValue = new TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequest();
            inValue.Body = new TechFix_Supplier_Application.InventoryService.GetAllInventoriesRequestBody();
            inValue.Body.supplierID = supplierID;
            return ((TechFix_Supplier_Application.InventoryService.InventoryServiceSoap)(this)).GetAllInventoriesAsync(inValue);
        }
    }
}
